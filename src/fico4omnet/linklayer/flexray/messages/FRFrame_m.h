//
// Generated file, do not edit! Created by nedtool 5.6 from fico4omnet/linklayer/flexray/messages/FRFrame.msg.
//

#ifndef __FICO4OMNET_FRFRAME_M_H
#define __FICO4OMNET_FRFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace FiCo4OMNeT {

/**
 * Class generated from <tt>fico4omnet/linklayer/flexray/messages/FRFrame.msg:20</tt> by nedtool.
 * <pre>
 * packet FRFrame
 * {
 *     // Set FlexRay Protocol Pitlength
 *     byteLength = 8;
 *     int frameID;
 *     int cycleNumber;
 *     int payloadLength; //The payload segment size is encoded in this field by setting it to the number of payload data bytes divided by two
 *     int channel;
 *     bool syncFrameIndicator;
 * }
 * </pre>
 */
class FRFrame : public ::omnetpp::cPacket
{
  protected:
    int frameID;
    int cycleNumber;
    int payloadLength;
    int channel;
    bool syncFrameIndicator;

  private:
    void copy(const FRFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FRFrame&);

  public:
    FRFrame(const char *name=nullptr, short kind=0);
    FRFrame(const FRFrame& other);
    virtual ~FRFrame();
    FRFrame& operator=(const FRFrame& other);
    virtual FRFrame *dup() const override {return new FRFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getFrameID() const;
    virtual void setFrameID(int frameID);
    virtual int getCycleNumber() const;
    virtual void setCycleNumber(int cycleNumber);
    virtual int getPayloadLength() const;
    virtual void setPayloadLength(int payloadLength);
    virtual int getChannel() const;
    virtual void setChannel(int channel);
    virtual bool getSyncFrameIndicator() const;
    virtual void setSyncFrameIndicator(bool syncFrameIndicator);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const FRFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, FRFrame& obj) {obj.parsimUnpack(b);}

/**
 * Enum generated from <tt>fico4omnet/linklayer/flexray/messages/FRFrame.msg:34</tt> by nedtool.
 * <pre>
 * //
 * // Enum for all possible channel combinations 
 * //
 * // \@author Stefan Buschmann
 * enum Channel
 * {
 *     // Event that signals the beginning of a new cycle
 *     CHANNEL_A = 0;
 *     // Event with a specified action time
 *     CHANNEL_B = 1;
 *     // Event that is triggered after a specified amount of time
 *     CHANNEL_AB = 2;
 * }
 * </pre>
 */
enum Channel {
    CHANNEL_A = 0,
    CHANNEL_B = 1,
    CHANNEL_AB = 2
};

} // namespace FiCo4OMNeT

#endif // ifndef __FICO4OMNET_FRFRAME_M_H

