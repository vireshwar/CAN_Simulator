//
// Generated file, do not edit! Created by nedtool 5.6 from fico4omnet/linklayer/can/messages/CanDataFrame.msg.
//

#ifndef __FICO4OMNET_CANDATAFRAME_M_H
#define __FICO4OMNET_CANDATAFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace FiCo4OMNeT {

// cplusplus {{
#if defined(__clang__)
#  pragma clang diagnostic ignored "-Winconsistent-missing-override"
#elif defined(__GNUC__) && __GNUC__ >= 5
#  pragma GCC diagnostic ignored "-Wsuggest-override"
#endif
// }}

/**
 * Class generated from <tt>fico4omnet/linklayer/can/messages/CanDataFrame.msg:42</tt> by nedtool.
 * <pre>
 * //
 * // Represents data and remote frames
 * //
 * packet CanDataFrame
 * {
 *     string displayString;
 *     unsigned int canID;			// ID of the message
 *     bool rtr;			// true if remote-frame
 *     double period;			// Periodicy of the message
 * }
 * </pre>
 */
class CanDataFrame : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string displayString;
    unsigned int canID;
    bool rtr;
    double period;

  private:
    void copy(const CanDataFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CanDataFrame&);

  public:
    CanDataFrame(const char *name=nullptr, short kind=0);
    CanDataFrame(const CanDataFrame& other);
    virtual ~CanDataFrame();
    CanDataFrame& operator=(const CanDataFrame& other);
    virtual CanDataFrame *dup() const override {return new CanDataFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString);
    virtual unsigned int getCanID() const;
    virtual void setCanID(unsigned int canID);
    virtual bool getRtr() const;
    virtual void setRtr(bool rtr);
    virtual double getPeriod() const;
    virtual void setPeriod(double period);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CanDataFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CanDataFrame& obj) {obj.parsimUnpack(b);}

} // namespace FiCo4OMNeT

#endif // ifndef __FICO4OMNET_CANDATAFRAME_M_H

