/*
 * ErrorFlag_m.h
 *
 *  Created on: 17-Nov-2020
 *      Author: Dell
 */

#ifndef FICO4OMNET_LINKLAYER_CAN_MESSAGES_ERRORFLAG_M_H_
#define FICO4OMNET_LINKLAYER_CAN_MESSAGES_ERRORFLAG_M_H_

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

namespace FiCo4OMNeT {

class ErrorFlag : public ::omnetpp::cMessage
{
protected :
    //check what to store as canID
    unsigned int canID;
    int kind;  //0->active 1->passive

public:
    ErrorFlag(unsigned int canID, int kind=0);
    virtual ~ErrorFlag();
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
     virtual unsigned int getCanID() const;
     virtual void setCanID(unsigned int canID);
     virtual int getKind() const;
     virtual void setKind(int kind);

};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ErrorFlag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ErrorFlag& obj) {obj.parsimUnpack(b);}
}



#endif /* FICO4OMNET_LINKLAYER_CAN_MESSAGES_ERRORFLAG_M_H_ */
